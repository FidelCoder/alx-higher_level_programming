This test only tests a function for dividing a matrix

control test , everything as expected:
>>> matrix_divided = __import__('2-matrix_divided').matrix_divided
>>> matrix = [[2,4,8],[3,4,6]]
>>> print(matrix_divided(matrix, 2))
[[1.0, 2.0, 4.0], [1.5, 2.0, 3.0]]

with div as 0:
>>> print(matrix_divided(matrix, 0))
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/davy/Desktop/alx-higher_level_programming/0x07-python-test_driven_development/2-matrix_divided.py", line 17, in matrix_divided
    raise ZeroDivisionError("division by zero")
ZeroDivisionError: division by zero

with div as None or str:
>>> print(matrix_divided(matrix, None))
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/davy/Desktop/alx-higher_level_programming/0x07-python-test_driven_development/2-matrix_divided.py", line 15, in matrix_divided
    raise TypeError("div must be a number")
TypeError: div must be a number

different matrix rows sizes:
>>> matrix = [[2,4,8],[3,4]]
>>> print(matrix_divided(matrix, 2))
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/davy/Desktop/alx-higher_level_programming/0x07-python-test_driven_development/2-matrix_divided.py", line 28, in matrix_divided
    raise TypeError("Each row of the matrix must have the same size")
TypeError: Each row of the matrix must have the same size

str in one of the rows:
>>> matrix = [[1,2],[2,'a']]
>>> print(matrix_divided(matrix, 3))
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/davy/Desktop/alx-higher_level_programming/0x07-python-test_driven_development/2-matrix_divided.py", line 32, in matrix_divided
    raise TypeError(
TypeError: matrix must be a matrix (list of lists) of integers/floats

list with different types of variables:
>>> matrix = ['sr',[2,'a']]
>>> print(matrix_divided(matrix, 3))
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/davy/Desktop/alx-higher_level_programming/0x07-python-test_driven_development/2-matrix_divided.py", line 19, in matrix_divided
    raise TypeError(
TypeError: matrix must be a matrix (list of lists) of integers/floats

list with empty lists:
>>> matrix = [[],[]]
>>> print(matrix_divided(matrix, 3))
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/davy/Desktop/alx-higher_level_programming/0x07-python-test_driven_development/2-matrix_divided.py", line 19, in matrix_divided
    raise TypeError(
TypeError: matrix must be a matrix (list of lists) of integers/floats

empty list:
>>> matrix = []
>>> print(matrix_divided(matrix,2))
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/davy/Desktop/alx-higher_level_programming/0x07-python-test_driven_development/2-matrix_divided.py", line 12, in matrix_divided
    raise TypeError(
TypeError: matrix must be a matrix (list of lists) of integers/floats

